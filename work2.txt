package exercise;

public class ConsonantsConversion {
	static boolean isVowel(char ch)
    {
        if (ch != 'a' && ch != 'e' && ch != 'i'
                && ch != 'o' && ch != 'u' && ch != 'A' && ch != 'E' && ch != 'I'
                && ch != 'O' && ch != 'U') 
        {
            return false;
        }
        return true;
    }
	static String replaceConsonants(char[] s) 
    {
      
        for (int i = 0; i < s.length; i++)
        {
            if (!isVowel(s[i]))
            {
  
                
                if (s[i] == 'z') 
                {
                    s[i] = 'b';
                }
                else if(s[i]==' ')
                {
                	s[i]=' ';
                }
                  
               
                else
                {
  
                    
                    s[i] = (char) (s[i] + 1);
  
              
                    if (isVowel(s[i])) 
                    {
                        s[i] = (char) (s[i] + 1);
                    }
                }
            }
        }
        return String.valueOf(s);
    }
	public static void main(String[] args)
    {
        String s = "SOUMYA";
        System.out.println(replaceConsonants(s.toCharArray()));
    }


}
--------------------------------------------------------------------------------------------


package exercise;
import java.util.*;

public class CountNoOfCharacters {
	public static void CountNumberOfChar(char ch[])
	{
	Map<Character,Integer> charMap=new HashMap<>();
	for(char c:ch) {
	if(charMap.containsKey(c)) 
	{
	int counter=charMap.get(c)+1;
	charMap.put(c, counter);

	}
	else
	{
	charMap.put(c,1);
	} 
	}
	for(char c:charMap.keySet()) 
	{
	System.out.println(c+"->"+charMap.get(c));
	}
	}
	public static void main(String[] args) {
	// TODO Auto-generated method stub
	Scanner scan=new Scanner(System.in);
	System.out.println("enter the numbers..");
	int n = scan.nextInt();
	char ch[]=new char[n];
	for(int i=0;i<ch.length;i++)
	{
	ch[i]=scan.next().charAt(0);
	}
	System.out.println("number of count is....");
	CountNumberOfChar(ch);
	} 
	
}
------------------------------------------------------------------------------------------------------------


package exercise;
import java.util.HashMap;
public class CountOfCharacter {
	public static void main(String[] args) {
		String str = "soumya";
		int count = 0;
		char ch;
		HashMap<Character, Integer> hashMap = new HashMap<Character, Integer>();
		for(int i=0;i<str.length();i++) {
			ch=str.charAt(i);
			if(hashMap.containsKey(ch))
			{
				count = hashMap.get(ch);
				count++;
				hashMap.replace(ch, count);
			}
			else {
				hashMap.put(ch, 1);
			}
		}
		for(Character key:hashMap.keySet())
		{
			System.out.println(key+" = "+hashMap.get(key));
		}
	}


}
--------------------------------------------------------------------------------------------------

package exercise;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

public class DuplicateRemove {

	public static void main(String[] args) {
		List <Integer> list =Arrays.asList(10,12,5,35,5,10,28,45);
		List<Integer> result= DuplicateRemover.removeDuplicates(list);
		System.out.println("original list : " +list);
		System.out.println("Resulting list : "+result);
	}

}

class DuplicateRemover
{
	public static List<Integer>removeDuplicates(List<Integer>list){
		Set<Integer> set= new TreeSet<>((i,j)->j-i);
		set.addAll(list);
		List<Integer>resultingList= new ArrayList<>(set);
		return resultingList;
	}

	

}
---------------------------------------------------------------------------------------


package exercise;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class EmailDomain {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number of emails : ");
		int n = sc.nextInt();
		String str = new String();
		ArrayList<String> list = new ArrayList<>();
		System.out.println("Enter the emails : ");
		for(int i=0; i<n; i++)
		{
			str = sc.next()+sc.nextLine();
			
			list.add(str);
		}
		Map<String, List<String>> emailGroup = new HashMap<>();
		for(String email:list)
		{
			int start = email.indexOf("@")+1;
			int end = email.indexOf(".com");
			String domain = email.substring(start, end);
			if(emailGroup.containsKey(domain))
			{
				emailGroup.get(domain).add(email);
			}
			else
			{
				List<String> emailList = new ArrayList<>();
				emailList.add(email);
				emailGroup.put(domain, emailList);
			}
		}
		Collection c = emailGroup.values();
		Set s1 = emailGroup.entrySet();
		Iterator itr = s1.iterator();
		while(itr.hasNext())
		{
			Map.Entry m1 = (Map.Entry)itr.next();
			System.out.println(m1.getKey()+"....."+m1.getValue());
		}
	}

	

}
--------------------------------------------------------------------------------------------------------------



package exercise;
import java.util.*;
public class MirrorImgOfString {
	public String getImage(String str)
	{
	StringBuffer mirStr = new StringBuffer(str);
	 mirStr.append(" | ");
	 StringBuffer sb = new StringBuffer(str);
	 sb.reverse();
	 mirStr.append(sb);
	 return mirStr.toString();
	 
	}
	public static void main(String[] args) 

	{
	// TODO Auto-generated method stub
	 MirrorImgOfString mirr = new MirrorImgOfString ();
	 Scanner scan = new Scanner(System.in);
	 System.out.println("Enter a String");
	 String str = scan.next()+scan.nextLine();
	 System.out.println("mirror image of the string....");
	 System.out.println(mirr.getImage(str));
	 
	}

}
---------------------------------------------------------------------------------------------------------------

package exercise;
import java.util.Scanner;
public class NumberDifference {
	public static int returnWithDiff(int n) {
		 String str="",st="";
		 str=str+n;
		 char ch[]=str.toCharArray();
		 for(int i=0;i<ch.length;i++) {
		 int a=0,b=0;
		 a=(int)ch[i]-48;
		 for(int j=i+1;j<ch.length;j++) {
		 b=(int)ch[j]-48;
		 break;
		 }
		 st=st+Math.abs(b-a);
		 }
		 char ch1[]=str.toCharArray();
		char ch2[]=st.toCharArray();
		if(ch2[ch2.length-1]=='0')
		{
		ch2[ch2.length-1]=ch1[ch2.length-1];
		}
		return Integer.parseInt(new String(ch2));
		}
		public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc =new Scanner(System.in);
		int n = sc.nextInt();
		System.out.println(NumberDifference.numDiffer(n));
		}
		private static char[] numDiffer(int n) {
			
			return null;
		}
		
	
		

}
----------------------------------------------------------------------------------------------------------


package exercise;
import java.util.Arrays;
import java.util.Scanner;

public class ReverseArray {
	public void inputArray(int num[])
	{
		System.out.println("Array is...");
		for(int i=0;i<num.length;i++)
		{
			System.out.println(num[i]);
		}
		
		
	}
	public void reverseArray(int num[])
	{
		
		System.out.println("\nReverse of array is ");
		for(int i=num.length-1;i>=0;i--)
		{
			System.out.println(num[i]+" ");
		}
		
	} 
	
	public static void main(String[] args) {
		
		// TODO Auto-generated method stub
		
		ReverseArray ar=new ReverseArray();
		Scanner scan=new Scanner(System.in);
		System.out.println("enter the limit of array");
		int n=scan.nextInt();
		System.out.println("enter the element");
		int num[]=new int[n];
		for(int i=0;i<num.length;i++)
		{
		num[i]=scan.nextInt();
		}
		
		ar.inputArray(num);
		ar.reverseArray(num);
		Arrays.sort(num);
		System.out.println("After sorting...");
		for(int item:num) {
		System.out.print(item+" ");
		}
	}
}
---------------------------------------------------------------------------------------------------------------------




package exercise;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;
public class SchoolMarkList {

	public static void main(String[] args) {

		Scanner scan=new Scanner(System.in);
		Map<Integer, Float> marks= new HashMap<>();
		System.out.println("enter the number of total students");
		int n=scan.nextInt();
		for(int i=0;i<n;i++)
		{
			System.out.println("enter the reg number and marks of the student : ");
			int regno=scan.nextInt();
			float m=scan.nextFloat();
			marks.put(regno,m);
		}
		
		Map<Integer,String> medals=getMedals(marks);
		medals.forEach((s,m ) -> System.out.println("Reg no:  "+s+"----"+m));
		
}

public static Map<Integer,String> getMedals(Map<Integer,Float>marks)
{
	Map<Integer,String>medals=new HashMap<>();
	
	marks.forEach((id,m)->
	{
		if(m>=90)
			medals.put(id, "Gold");
		else if(m>=80)
			medals.put(id,"Silver");
		else if(m>=70)
			medals.put(id,"Bronze");
		else
			medals.put(id,"No models");
	 });
     return medals;
   }




	}
===================================================================================================================


package exercise;
import java.util.Arrays;
import java.util.Scanner;

public class SecondsmallElement {
	public static  void secondSmallestNumber(int array[])
	{
	 Arrays.sort(array);
	 System.out.println( "Second Smallest element in enetered array is "+array[1]);
	}
	public static void main(String[] args) {
	// TODO Auto-generated method stub
		
	Scanner scan=new Scanner(System.in);
	System.out.println("enter the limit");
	int n=scan.nextInt();

	int array[]=new int[n];
	System.out.println("enter the array");
	for(int i=0;i<array.length;i++)
	{
		array[i]=scan.nextInt();
	}

	secondSmallestNumber(array);
	} 

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------



package exercise;
import java.util.*;

public class SquaresOfNumbers {
	public  void squaresOfNumbers(int arr[])
	{
	Map<Integer,Integer> array=new HashMap<>();
	for(int i=0;i<arr.length;i++) {
	int num=arr[i];
	int square=num*num;
	array.put(i, square);
	}
	for(int i=0;i<arr.length;i++) {
	System.out.println(arr[i]+"->"+array.get(i));
	} 
	}
	public static void main(String[] args) {
		
	// TODO Auto-generated method stub
	SquaresOfNumbers numb=new SquaresOfNumbers();
	Scanner scan=new Scanner(System.in);
	System.out.println("enter the limit....");
	int n=scan.nextInt();
	int arr[]=new int[n];
	System.out.println("Squares of Numbers is.....");
	for(int i=0;i<arr.length;i++) 
	{
	arr[i]=scan.nextInt();
	}
	numb.squaresOfNumbers(arr);
	} 

	
	} 
    --------------------------------------------------------------------------------------------------------------------------------------------------------------------



    package exercise;
import java.util.Scanner;

public class SumArray {

	public static void main(String[] args) {
		SumArray s=new SumArray();
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the array size : ");
		int n=sc.nextInt();
		int array[]=new int[n];
		for(int i=0;i<array.length;i++)
		{
		array[i]=sc.nextInt();
		}
		
		s.Sum(array);
		
		
	}
	
	public void Sum(int array[])
	{
		int sum=0;
		for(int i=0;i<array.length;i++)
		{
		System.out.println(array[i]);
		sum=sum+array[i];
		}
		System.out.println("sum of all digits :"+sum);
		}
	


	}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------



package exercise;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class VoteEligible {

	public static void main(String[] args) {
		Scanner scan=new Scanner(System.in);
		Map<Integer,Integer> age= new HashMap<>();
		System.out.println("enter the number of total candidate");
		int n=scan.nextInt();
		for(int i=0;i<n;i++)
		{
			System.out.println("enter the id number of Age of the candidate : ");
			int idno=scan.nextInt();
			int a=scan.nextInt();
			age.put(idno,a);
		}
		
		Map<Integer,String> vote=getEligible(age);
		vote.forEach((i,a ) -> System.out.println("Id of candidate :  "+i+"----"+a));
		
}

public static Map<Integer,String> getEligible(Map<Integer,Integer>age)
{
	Map<Integer,String>vote=new HashMap<>();
	
	age.forEach((id,a)->
	{
		if(a>=18)
			vote.put(id, "Eligible for vote");
		else if(a<18)
			vote.put(id,"Not eligible ");
		
	});
return vote;
}


	

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
